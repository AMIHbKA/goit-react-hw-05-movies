{"version":3,"file":"static/js/577.cd46c931.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Skeleton/Skeleton.styled.js","components/Skeleton/SkeletonCard.js","pages/Home.js","services/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px;\n  padding: 0;\n  justify-items: center;\n\n  img {\n    width: 200px;\n    height: 300px;\n    border-radius: 5px;\n    object-fit: cover;\n  }\n\n  li {\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: 1px solid red;\n    border-radius: 5px;\n    width: 200px;\n\n    :hover {\n      transform: scale(1.03);\n      box-shadow: 0 0 10px rgb(0 0 0 / 0.2);\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: #000;\n    font-weight: 500;\n  }\n\n  .movie-name {\n    padding: 5px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieListStyled } from './MovieList.styled';\nimport { IMAGES_URL } from 'services/api/api';\nimport defaultPoster from '../../images/placeholders/poster-placeholder.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListStyled>\n      {movies?.map(({ id, title, poster_path }) => {\n        const imageSrc = poster_path\n          ? `${IMAGES_URL}w185/${poster_path}`\n          : defaultPoster;\n        const imageAlt = poster_path ? `${title} poster` : 'No poster';\n\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img src={imageSrc} alt={imageAlt} />\n              <p className=\"movie-name\">{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </MovieListStyled>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SkeletonStyle = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px;\n  padding: 0;\n  justify-items: center;\n\n  .poster {\n    margin-bottom: 5px;\n  }\n`;\n","import Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nexport const SkeletonCard = ({ cards }) => {\n  return Array(cards)\n    .fill(0)\n    .map((card, index) => (\n      <div className=\"card-skeleton\" key={index}>\n        <div className=\"poster\">\n          <Skeleton width={200} height={300} />\n        </div>\n        <div className=\"title\">\n          <Skeleton width={200} height={25} />\n        </div>\n      </div>\n    ));\n};\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { SkeletonStyle } from 'components/Skeleton/Skeleton.styled';\nimport { SkeletonCard } from 'components/Skeleton/SkeletonCard';\nimport { Container } from 'components/UI/GlobalStyles/Container.styled';\nimport { useState, useEffect } from 'react';\nimport * as API from '../services/api/api';\nimport PropTypes from 'prop-types';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getTrends = async () => {\n      try {\n        setLoading(true);\n        const response = await API.getTrendingMovies();\n        setMovies(response.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrends();\n\n    return () => {\n      API.abortController.abort();\n    };\n  }, []);\n\n  const renderItems = movies.length > 0;\n  if (isLoading) {\n    return (\n      <Container>\n        <SkeletonStyle>\n          <SkeletonCard cards={20} />\n        </SkeletonStyle>\n      </Container>\n    );\n  } else {\n    return (\n      <Container>{renderItems && <MovieList movies={movies} />}</Container>\n    );\n  }\n};\n\nHome.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// \"backdrop_sizes\": \"w300\", \"w780\", \"w1280\", \"original\"\n// \"poster_sizes\": \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"\n// \"profile_sizes\": \"w45\", \"w185\", \"h632\", \"original\"\n\nexport const IMAGES_URL = 'https://image.tmdb.org/t/p/';\nconst cache = new Map();\nconst LANGUAGE = 'en-US';\n\nexport const abortController = new AbortController();\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOTMxNDhmYjNlMjk2YmI3YmM0MGQyZjkzMDg2NWUyYSIsInN1YiI6IjYxMmJkOWRlNDJmMTlmMDA0MjllYzRlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qUcOqubdlFiw4Vo4XJp8VttB73h6Ocj7p2Hqc1K-jGE',\n  },\n});\n\nexport async function searchMovies(query, page = 1, language = LANGUAGE) {\n  try {\n    const cacheKey = `search-movies-${query}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get('search/movie', {\n      params: {\n        query: query,\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getTrendingMovies(\n  page = 1,\n  language = LANGUAGE,\n  timeWindow = 'day'\n) {\n  try {\n    const cacheKey = `trending-movies-${timeWindow}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`trending/movie/${timeWindow}`, {\n      params: {\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n//Append To Response - movie detail если будет время посмотреть, прикольная штука\nexport async function getMovieDetails(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-details-${movieId}-${language}`;\n\n    console.log(`ключ: `, cacheKey)\n\n    if (cache.has(cacheKey)) {\n      console.log(`Ключ обнаружен. Запрос не делаем.`, cacheKey)\n      \n      return cache.get(cacheKey);\n    }\nconsole.log(`Ключ не обнаружен.`, cacheKey)\n    console.log('Отправляет запрос в базу, id: ', movieId)\n    const response = await instance.get(`movie/${movieId}`, {\n      params: {\n        language: language,\n      },\n    });\n    console.log('Запрос получен, id: ', movieId)\n    \n    cache.set(cacheKey, response.data);\n    console.log(`Добавили ключ `, cacheKey)\n    \n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getMovieCredits(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-credits-${movieId}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}/credits`, {\n      params: {\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getMovieReviews(movieId, page = 1, language = LANGUAGE) {\n  try {\n    const response = await instance.get(`movie/${movieId}/reviews`, {\n      params: {\n        language: language,\n        page: page,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n"],"names":["MovieListStyled","styled","MovieList","movies","location","useLocation","map","id","title","poster_path","imageSrc","IMAGES_URL","defaultPoster","imageAlt","to","state","from","src","alt","className","SkeletonStyle","SkeletonCard","cards","Array","fill","card","index","width","height","useState","setMovies","isLoading","setLoading","useEffect","getTrends","API","response","results","console","log","message","renderItems","length","cache","Map","LANGUAGE","abortController","AbortController","instance","axios","baseURL","headers","Authorization","searchMovies","query","page","language","cacheKey","has","get","params","include_adult","set","data","massage","getTrendingMovies","timeWindow","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}