{"version":3,"file":"static/js/546.8db64967.chunk.js","mappings":"6RAGaA,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,i8BA+DrBE,EAAeF,EAAAA,GAAAA,IAAH,mRAOL,SAAAG,GAAK,OAAIA,EAAMC,SAAV,I,mBCrEZC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EACND,EADMC,OAAQC,EACdF,EADcE,MAAOC,EACrBH,EADqBG,aAAcC,EACnCJ,EADmCI,YAAaC,EAChDL,EADgDK,SAAUC,EAC1DN,EAD0DM,cAEtDC,EAAWH,EAAW,UACrBI,EAAAA,GADqB,gBACHJ,GACrBK,EACEC,EAAWN,EAAW,UAAMF,EAAN,WAAuB,YAC7CS,EAAWL,EAAa,UACvBE,EAAAA,GADuB,gBACLF,GACrB,OACJ,OACE,SAACV,EAAD,CAAcE,UAAWa,EAAzB,UACE,UAAClB,EAAD,YACE,gBACEmB,UAAU,SACVC,IAAKN,EACLO,IAAKJ,EACLK,MAAM,MACNC,OAAO,SAET,iBAAKJ,UAAU,aAAf,WACE,eAAIA,UAAU,QAAd,SAAuBV,KACvB,eAAGU,UAAU,SAAb,UAAsB,iBACP,6BAAuB,GAAfT,GAAmBc,QAAQ,GAAG,UAEpDhB,EAAOiB,SACN,eAAGN,UAAU,UAAb,WACE,0BAAM,YAAc,IAAEX,EAAOkB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,UAG9D,eAAIT,UAAU,iBAAd,SAA+B,cAC/B,cAAGA,UAAU,gBAAb,SAA8BP,WAKvC,E,8BCjCYiB,G,QAAkB,WAC7B,OACE,SAAC1B,EAAD,WACE,UAACH,EAAD,YACE,gBAAKmB,UAAU,SAAf,UACE,SAAC,IAAD,CAAUG,MAAO,IAAKC,OAAQ,SAEhC,iBAAKJ,UAAU,aAAf,WACE,eAAIA,UAAU,QAAd,UACE,SAAC,IAAD,CAAUG,MAAO,IAAKC,OAAQ,QAEhC,eAAGJ,UAAU,SAAb,UAAsB,eACP,KACb,2BACE,SAAC,IAAD,CAAUG,MAAO,GAAIC,OAAQ,WAGjC,eAAGJ,UAAU,UAAb,WACE,0BAAM,YAAc,KAAC,SAAC,IAAD,CAAUG,MAAO,IAAKC,OAAQ,SAErD,eAAIJ,UAAU,iBAAd,SAA+B,cAC/B,cAAGA,UAAU,gBAAb,UACE,SAAC,IAAD,CAAUG,MAAO,IAAKC,OAAQ,GAAIO,MAAO,aAMpD,GC6BD,EAtDqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3D,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBF,GAAW,GAFS,SAGGG,EAAAA,GAAoBf,GAHvB,OAGdgB,EAHc,OAKpBN,EAAgBM,GALI,gDAOpBC,QAAQC,IAAI,KAAMC,SAPE,yBASpBP,GAAW,GATS,4EAAH,qDAerB,OAFAE,IAEO,WACLC,EAAAA,GAAAA,OACD,CACF,GAAE,CAACf,KAGF,iCACE,SAAC,IAAD,CAAUoB,GAAIhB,EAAoBiB,QAAlC,SAA2C,gBAC1CV,IAAa,SAACb,EAAD,KACZa,GAAaW,OAAOC,KAAKd,GAAcf,OAAS,IAChD,SAACnB,EAAD,CAAWC,MAAOiC,KAGpB,SAAC,EAAAe,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,UAAC,IAAD,YACE,SAAC,KAAD,UAAO,4BACP,UAAC,KAAD,YACE,yBACE,SAAC,IAAD,CAAYL,GAAG,OAAf,SAAsB,YAExB,yBACE,SAAC,IAAD,CAAYA,GAAG,UAAf,SAAyB,kBAG3BT,IAAa,SAAC,KAAD,WAKxB,C,+IC3DYe,EAAOxD,EAAAA,GAAAA,GAAH,gVAgBJyD,EAAQzD,EAAAA,GAAAA,GAAH,sFAML0D,EAAkB1D,EAAAA,GAAAA,IAAH,8BACxB2D,EAAAA,E,kPCpBS7C,EAAa,8BACpB8C,EAAQ,IAAIC,IACZC,EAAW,QAEJC,EAAkB,IAAIC,gBAE7BC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,CACP,eAAgB,mBAChBC,cACE,gOAIC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,4FAAmCC,EAAnC,+BAA0C,EAAGC,EAA7C,+BAAwDX,EAAxD,SAEGY,EAFH,wBAE+BH,EAF/B,YAEwCC,EAFxC,YAEgDC,IAC/Cb,EAAMe,IAAID,GAHX,yCAIMd,EAAMgB,IAAIF,IAJhB,uBAOoBT,EAASW,IAAI,eAAgB,CAClDC,OAAQ,CACNN,MAAOA,EACPO,eAAe,EACfN,KAAMA,EACNC,SAAUA,KAZX,cAOG3B,EAPH,OAgBHc,EAAMmB,IAAIL,EAAU5B,EAASkC,MAhB1B,kBAmBIlC,EAASkC,MAnBb,kCAqBHjC,QAAQC,IAAR,MArBG,kFAyBA,SAAeiC,IAAtB,+B,aAAO,O,oBAAA,2GACLT,EADK,+BACE,EACPC,EAFK,+BAEMX,EACXoB,EAHK,+BAGQ,MAHR,SAMGR,EANH,0BAMiCQ,EANjC,YAM+CV,EAN/C,YAMuDC,IACtDb,EAAMe,IAAID,GAPX,yCAQMd,EAAMgB,IAAIF,IARhB,uBAWoBT,EAASW,IAAT,yBAA+BM,GAAc,CAClEL,OAAQ,CACNC,eAAe,EACfN,KAAMA,EACNC,SAAUA,KAfX,cAWG3B,EAXH,OAmBHc,EAAMmB,IAAIL,EAAU5B,EAASkC,MAnB1B,kBAsBIlC,EAASkC,MAtBb,kCAwBHjC,QAAQC,IAAR,MAxBG,kFA6BA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,0FAAwC2C,EAAxC,+BAAmDX,EAAnD,SAEGY,EAFH,wBAE+B5C,EAF/B,YAE0C2C,IACzCb,EAAMe,IAAID,GAHX,yCAIMd,EAAMgB,IAAIF,IAJhB,uBAOoBT,EAASW,IAAT,gBAAsB9C,GAAW,CACtD+C,OAAQ,CACNJ,SAAUA,KATX,cAOG3B,EAPH,OAaHc,EAAMmB,IAAIL,EAAU5B,EAASkC,MAb1B,kBAeIlC,EAASkC,MAfb,kCAiBHjC,QAAQC,IAAR,MAjBG,kFAqBA,SAAemC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrD,GAA/B,0FAAwC2C,EAAxC,+BAAmDX,EAAnD,SAEGY,EAFH,wBAE+B5C,EAF/B,YAE0C2C,IACzCb,EAAMe,IAAID,GAHX,yCAIMd,EAAMgB,IAAIF,IAJhB,uBAOoBT,EAASW,IAAT,gBAAsB9C,EAAtB,YAAyC,CAC9D+C,OAAQ,CACNJ,SAAUA,KATX,cAOG3B,EAPH,OAaHc,EAAMmB,IAAIL,EAAU5B,EAASkC,MAb1B,kBAeIlC,EAASkC,MAfb,kCAiBHjC,QAAQC,IAAR,MAjBG,kFAqBA,SAAeoC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtD,GAA/B,8FAAwC0C,EAAxC,+BAA+C,EAAGC,EAAlD,+BAA6DX,EAA7D,kBAEoBG,EAASW,IAAT,gBAAsB9C,EAAtB,YAAyC,CAC9D+C,OAAQ,CACNJ,SAAUA,EACVD,KAAMA,KALP,cAEG1B,EAFH,yBAUIA,EAASkC,MAVb,gCAYHjC,QAAQC,IAAR,MAZG,iF","sources":["components/MovieCard/MovieCardStyled.js","components/MovieCard/MovieCard.jsx","components/Skeleton/SkeletonDetails.js","pages/MovieDetails.js","pages/MovieDetails.styled.js","services/api/api.js"],"sourcesContent":["import { Container } from 'components/UI/GlobalStyles/Container.styled';\nimport styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled(Container)`\n  display: flex;\n\n  @media screen and (max-width: 480px) {\n    display: block;\n  }\n\n  .poster {\n    margin-right: 15px;\n    object-fit: cover;\n    border-radius: 10px;\n    width: 300px;\n    height: 450px;\n  }\n\n  .title {\n    font-weight: 900;\n    font-size: 2em;\n    color: #bf4352;\n  }\n\n  .scores {\n    margin-top: 10px;\n    font-weight: 500;\n    color: #fff;\n    vertical-align: middle;\n\n    span {\n      font-weight: 700;\n      font-size: 1.2em;\n      color: #bf4352;\n    }\n  }\n\n  .overview-title {\n    margin-top: 10%;\n    font-size: 1.2em;\n    font-weight: 700;\n    color: #bf4352;\n    border-bottom: 2px solid #bf4352;\n  }\n\n  .overview-text {\n    margin-top: 1%;\n    color: #fff;\n  }\n\n  .title-genres {\n    grid-area: title-genres;\n    color: #fff;\n  }\n\n  .genres {\n    margin-top: 1%;\n    color: #fff;\n\n    span {\n      font-weight: 700;\n      color: #bf4352;\n    }\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  background: linear-gradient(\n      to right,\n      rgb(31.5 10.5 10.5 / 1),\n      rgb(31.5 10.5 10.5 / 0.84) 50%,\n      rgb(31.5 10.5 10.5 / 0.84) 100%\n    ),\n    no-repeat url(${props => props.$backdrop});\n  background-size: cover;\n  background-position: center;\n`;\n","import { IMAGES_URL } from 'services/api/api';\nimport { MovieWrapper, MovieDetailsContainer } from './MovieCardStyled';\nimport defaultPoster from '../../images/placeholders/poster-placeholder.jpg';\n\nexport const MovieCard = ({ movie }) => {\n  const { genres, title, vote_average, poster_path, overview, backdrop_path } =\n    movie;\n  const imageSrc = poster_path\n    ? `${IMAGES_URL}/w300${poster_path}`\n    : defaultPoster;\n  const imageAlt = poster_path ? `${title} poster` : 'No poster';\n  const backdrop = backdrop_path\n    ? `${IMAGES_URL}/w500${backdrop_path}`\n    : '#fff';\n  return (\n    <MovieWrapper $backdrop={backdrop}>\n      <MovieDetailsContainer>\n        <img\n          className=\"poster\"\n          src={imageSrc}\n          alt={imageAlt}\n          width=\"300\"\n          height=\"450\"\n        />\n        <div className=\"movie-info\">\n          <h2 className=\"title\">{title}</h2>\n          <p className=\"scores\">\n            User scores: <span>{(vote_average * 10).toFixed(0)}%</span>\n          </p>\n          {genres.length && (\n            <p className=\"genres \">\n              <span>Genres:</span> {genres.map(({ name }) => name).join(', ')}\n            </p>\n          )}\n          <h3 className=\"overview-title\">Overview</h3>\n          <p className=\"overview-text\">{overview}</p>\n        </div>\n      </MovieDetailsContainer>\n    </MovieWrapper>\n  );\n};\n","import {\n  MovieDetailsContainer,\n  MovieWrapper,\n} from 'components/MovieCard/MovieCardStyled';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nexport const SkeletonDetails = () => {\n  return (\n    <MovieWrapper>\n      <MovieDetailsContainer>\n        <div className=\"poster\">\n          <Skeleton width={300} height={450} />\n        </div>\n        <div className=\"movie-info\">\n          <h2 className=\"title\">\n            <Skeleton width={500} height={45} />\n          </h2>\n          <p className=\"scores\">\n            User scores:{' '}\n            <span>\n              <Skeleton width={30} height={15} />\n            </span>\n          </p>\n          <p className=\"genres \">\n            <span>Genres:</span> <Skeleton width={300} height={15} />\n          </p>\n          <h3 className=\"overview-title\">Overview</h3>\n          <p className=\"overview-text\">\n            <Skeleton width={500} height={15} count={3} />\n          </p>\n        </div>\n      </MovieDetailsContainer>\n    </MovieWrapper>\n  );\n};\n","import { useRef, Suspense, useState, useEffect } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport * as API from '../services/api/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { StyledLink, BackLink } from 'components/UI/GlobalStyles/Links';\nimport { List, Title } from './MovieDetails.styled';\nimport { Container } from 'components/UI/GlobalStyles/Container.styled';\nimport { SkeletonDetails } from 'components/Skeleton/SkeletonDetails';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        setLoading(true);\n        const response = await API.getMovieDetails(movieId);\n\n        setMovieDetails(response);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovieDetails();\n\n    return () => {\n      API.abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}>&#10232; Back</BackLink>\n      {isLoading && <SkeletonDetails />}\n      {!isLoading && Object.keys(movieDetails).length > 0 && (\n        <MovieCard movie={movieDetails} />\n      )}\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Container>\n          <Title>Additional information</Title>\n          <List>\n            <li>\n              <StyledLink to=\"cast\">Cast</StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\">Reviews</StyledLink>\n            </li>\n          </List>\n          {!isLoading && <Outlet />}\n        </Container>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.number,\n};\n","import { baseNoInfoStyles } from 'components/UI/GlobalStyles/BaseStyles';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  padding: 0;\n  border-bottom: 2px solid #bf4352;\n\n  li {\n    width: 70px;\n    text-align: center;\n    padding: 5px;\n    background-color: #bf4352;\n    border-right: #fff 1px solid;\n    border-left: #fff 1px solid;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n`;\n\nexport const Title = styled.h2`\n  color: #bf4352;\n  font-size: 1.5em;\n  margin-block: 1vh;\n`;\n\nexport const NoSearchResults = styled.div`\n  ${baseNoInfoStyles}\n`;\n","import axios from 'axios';\n\n// \"backdrop_sizes\": \"w300\", \"w780\", \"w1280\", \"original\"\n// \"poster_sizes\": \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"\n// \"profile_sizes\": \"w45\", \"w185\", \"h632\", \"original\"\n\nexport const IMAGES_URL = 'https://image.tmdb.org/t/p/';\nconst cache = new Map();\nconst LANGUAGE = 'en-US';\n\nexport const abortController = new AbortController();\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOTMxNDhmYjNlMjk2YmI3YmM0MGQyZjkzMDg2NWUyYSIsInN1YiI6IjYxMmJkOWRlNDJmMTlmMDA0MjllYzRlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qUcOqubdlFiw4Vo4XJp8VttB73h6Ocj7p2Hqc1K-jGE',\n  },\n});\n\nexport async function searchMovies(query, page = 1, language = LANGUAGE) {\n  try {\n    const cacheKey = `search-movies-${query}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get('search/movie', {\n      params: {\n        query: query,\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    // console.log('response.data', response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getTrendingMovies(\n  page = 1,\n  language = LANGUAGE,\n  timeWindow = 'day'\n) {\n  try {\n    const cacheKey = `trending-movies-${timeWindow}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`trending/movie/${timeWindow}`, {\n      params: {\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n    // console.log('cache', cache);\n    // console.log('response.data', response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//Append To Response - movie detail если будет время посмотреть, прикольная штука\nexport async function getMovieDetails(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-details-${movieId}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}`, {\n      params: {\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n    // console.log('response.data', response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-credits-${movieId}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}/credits`, {\n      params: {\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n    // console.log('response.data', response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId, page = 1, language = LANGUAGE) {\n  try {\n    const response = await instance.get(`movie/${movieId}/reviews`, {\n      params: {\n        language: language,\n        page: page,\n      },\n    });\n\n    // console.log('response.data', response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MovieDetailsContainer","styled","Container","MovieWrapper","props","$backdrop","MovieCard","movie","genres","title","vote_average","poster_path","overview","backdrop_path","imageSrc","IMAGES_URL","defaultPoster","imageAlt","backdrop","className","src","alt","width","height","toFixed","length","map","name","join","SkeletonDetails","count","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieDetails","setMovieDetails","isLoading","setLoading","useEffect","getMovieDetails","API","response","console","log","message","to","current","Object","keys","Suspense","fallback","List","Title","NoSearchResults","baseNoInfoStyles","cache","Map","LANGUAGE","abortController","AbortController","instance","axios","baseURL","headers","Authorization","searchMovies","query","page","language","cacheKey","has","get","params","include_adult","set","data","getTrendingMovies","timeWindow","getMovieCredits","getMovieReviews"],"sourceRoot":""}