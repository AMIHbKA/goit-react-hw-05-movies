{"version":3,"file":"static/js/674.4f5ecc49.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Skeleton/Skeleton.styled.js","components/Skeleton/SkeletonCard.js","components/UI/icons.js","pages/MovieDetails.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js","services/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px;\n  padding: 0;\n  justify-items: center;\n\n  img {\n    width: 200px;\n    height: 300px;\n    border-radius: 5px;\n    object-fit: cover;\n  }\n\n  li {\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: 1px solid red;\n    border-radius: 5px;\n    width: 200px;\n\n    :hover {\n      transform: scale(1.03);\n      box-shadow: 0 0 10px rgb(0 0 0 / 0.2);\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: #000;\n    font-weight: 500;\n  }\n\n  .movie-name {\n    padding: 5px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieListStyled } from './MovieList.styled';\nimport { IMAGES_URL } from 'services/api/api';\nimport defaultPoster from '../../images/placeholders/poster-placeholder.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListStyled>\n      {movies?.map(({ id, title, poster_path }) => {\n        const imageSrc = poster_path\n          ? `${IMAGES_URL}w185/${poster_path}`\n          : defaultPoster;\n        const imageAlt = poster_path ? `${title} poster` : 'No poster';\n\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img src={imageSrc} alt={imageAlt} />\n              <p className=\"movie-name\">{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </MovieListStyled>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SkeletonStyle = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 10px;\n  padding: 0;\n  justify-items: center;\n\n  .poster {\n    margin-bottom: 5px;\n  }\n`;\n","import Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nexport const SkeletonCard = ({ cards }) => {\n  return Array(cards)\n    .fill(0)\n    .map((card, index) => (\n      <div className=\"card-skeleton\" key={index}>\n        <div className=\"poster\">\n          <Skeleton width={200} height={300} />\n        </div>\n        <div className=\"title\">\n          <Skeleton width={200} height={25} />\n        </div>\n      </div>\n    ));\n};\n","export const CloseButtonIcon = ({ width, height, ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    {\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n        <path d=\"M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z M390.8,390.8c-74.3,74.3-195.3,74.3-269.6,0c-74.3-74.3-74.3-195.3,0-269.6s195.3-74.3,269.6,0C465.2,195.5,465.2,316.5,390.8,390.8z\" />\n        <polygon points=\"340.2,160 255.8,244.2 171.8,160.4 160,172.2 244,256 160,339.8 171.8,351.6 255.8,267.8 340.2,352 352,340.2 267.6,256 352,171.8\" />\n      </svg>\n    }\n  </svg>\n);\n\nexport const SearchButtonIcon = ({ width, height, ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2.5\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle cx=\"11\" cy=\"11\" r=\"8\" />\n        <path d=\"m21 21-4.35-4.35\" />\n      </svg>\n    }\n  </svg>\n);\n","import { baseNoInfoStyles } from 'components/UI/GlobalStyles/BaseStyles';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  padding: 0;\n  border-bottom: 2px solid #bf4352;\n\n  li {\n    width: 70px;\n    text-align: center;\n    padding: 5px;\n    background-color: #bf4352;\n    border-right: #fff 1px solid;\n    border-left: #fff 1px solid;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n`;\n\nexport const Title = styled.h2`\n  color: #bf4352;\n  font-size: 1.5em;\n  margin-block: 1vh;\n`;\n\nexport const NoSearchResults = styled.div`\n  ${baseNoInfoStyles}\n`;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  margin-inline: auto;\n  margin-bottom: 25px;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 32px;\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  border: 1px solid #bf4352;\n  border-left: none;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  display: inline-block;\n  width: 32px;\n  height: 32px;\n  border: 1px solid #bf4352;\n  border-right: none;\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n\n  &:hover {\n    opacity: 1;\n\n    svg {\n      stroke: #bf4352;\n    }\n  }\n`;\n","import { FormStyled, ButtonSearch, Input } from './SearchForm.styled';\nimport { SearchButtonIcon } from '../UI/icons';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new FormData(form);\n    const formJson = Object.fromEntries(formData.entries());\n    onSubmit(formJson);\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <ButtonSearch type=\"submit\" name=\"search\">\n        <SearchButtonIcon />\n      </ButtonSearch>\n      <Input type=\"search\" name=\"searchMovie\" required />\n    </FormStyled>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { SkeletonStyle } from 'components/Skeleton/Skeleton.styled';\nimport { SkeletonCard } from 'components/Skeleton/SkeletonCard';\nimport { Container } from 'components/UI/GlobalStyles/Container.styled';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../services/api/api';\nimport { NoSearchResults } from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    if (!query) {\n      return;\n    }\n\n    const getMovieBySearch = async () => {\n      try {\n        setLoading(true);\n        const response = await API.searchMovies(query);\n        setMovies(response.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovieBySearch();\n\n    return () => {\n      API.abortController.abort();\n    };\n  }, [searchParams]);\n\n  const onHandleSubmit = query => {\n    const newSearch = query.searchMovie;\n    if (newSearch === '') {\n      return setSearchParams({});\n    } else {\n      setSearchParams({ query: newSearch });\n    }\n  };\n\n  const renderItems = movies.length > 0;\n  const search = searchParams.get('query');\n\n  if (isLoading) {\n    return (\n      <Container>\n        <SearchForm onSubmit={onHandleSubmit} />\n        <SkeletonStyle>\n          <SkeletonCard cards={5} />\n        </SkeletonStyle>\n      </Container>\n    );\n  } else if (!renderItems && search !== null) {\n    return (\n      <Container>\n        <SearchForm onSubmit={onHandleSubmit} />\n        <NoSearchResults className=\"no-cast\">\n          No results from the search \"{search}\"\n        </NoSearchResults>\n      </Container>\n    );\n  } else {\n    return (\n      <Container>\n        <SearchForm onSubmit={onHandleSubmit} />\n        <MovieList movies={movies} />\n      </Container>\n    );\n  }\n};\n\nMovies.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default Movies;\n","import axios from 'axios';\n\n// \"backdrop_sizes\": \"w300\", \"w780\", \"w1280\", \"original\"\n// \"poster_sizes\": \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"\n// \"profile_sizes\": \"w45\", \"w185\", \"h632\", \"original\"\n\nexport const IMAGES_URL = 'https://image.tmdb.org/t/p/';\nconst cache = new Map();\nconst LANGUAGE = 'en-US';\n\nexport const abortController = new AbortController();\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOTMxNDhmYjNlMjk2YmI3YmM0MGQyZjkzMDg2NWUyYSIsInN1YiI6IjYxMmJkOWRlNDJmMTlmMDA0MjllYzRlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qUcOqubdlFiw4Vo4XJp8VttB73h6Ocj7p2Hqc1K-jGE',\n  },\n});\n\nexport async function searchMovies(query, page = 1, language = LANGUAGE) {\n  try {\n    const cacheKey = `search-movies-${query}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get('search/movie', {\n      params: {\n        query: query,\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getTrendingMovies(\n  page = 1,\n  language = LANGUAGE,\n  timeWindow = 'day'\n) {\n  try {\n    const cacheKey = `trending-movies-${timeWindow}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`trending/movie/${timeWindow}`, {\n      params: {\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n//Append To Response - movie detail если будет время посмотреть, прикольная штука\nexport async function getMovieDetails(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-details-${movieId}-${language}`;\n\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}`, {\n      params: {\n        language: language,\n      },\n    });\n    \n    cache.set(cacheKey, response.data);\n    \n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getMovieCredits(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-credits-${movieId}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}/credits`, {\n      params: {\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getMovieReviews(movieId, page = 1, language = LANGUAGE) {\n  try {\n    const response = await instance.get(`movie/${movieId}/reviews`, {\n      params: {\n        language: language,\n        page: page,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\n\n"],"names":["MovieListStyled","styled","MovieList","movies","location","useLocation","map","id","title","poster_path","imageSrc","IMAGES_URL","defaultPoster","imageAlt","to","state","from","src","alt","className","SkeletonStyle","SkeletonCard","cards","Array","fill","card","index","width","height","CloseButtonIcon","props","xmlns","viewBox","d","points","SearchButtonIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","List","Title","NoSearchResults","baseNoInfoStyles","FormStyled","Input","ButtonSearch","SearchForm","onSubmit","event","preventDefault","form","target","formData","FormData","formJson","Object","fromEntries","entries","type","name","required","useState","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setLoading","useEffect","query","get","getMovieBySearch","API","response","results","console","log","message","onHandleSubmit","newSearch","searchMovie","renderItems","length","search","cache","Map","LANGUAGE","abortController","AbortController","instance","axios","baseURL","headers","Authorization","searchMovies","page","language","cacheKey","has","params","include_adult","set","data","massage","getTrendingMovies","timeWindow","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}