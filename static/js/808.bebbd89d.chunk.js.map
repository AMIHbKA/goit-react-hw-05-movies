{"version":3,"file":"static/js/808.bebbd89d.chunk.js","mappings":"yQAAaA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAWC,GAArB,mBAC7B,gCACEC,MAAM,6BACNH,MAAOA,EACPC,OAAQA,EACRG,QAAQ,aACJF,GALN,cAQI,iBAAKC,MAAM,6BAA6BC,QAAQ,cAAhD,WACE,iBAAMC,EAAE,2PACR,oBAASC,OAAO,uIAXO,EAiBlBC,EAAmB,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAWC,GAArB,mBAC9B,gCACEC,MAAM,6BACNH,MAAOA,EACPC,OAAQA,EACRG,QAAQ,aACJF,GALN,cAQI,iBACEC,MAAM,6BACNK,KAAK,OACLC,OAAO,OACPC,cAAc,QACdC,eAAe,QACfC,YAAY,MACZR,QAAQ,YAPV,WASE,mBAAQS,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,iBAAMV,EAAE,0BAnBgB,C,mLCdnBW,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,ktCAkBjB,SAAAf,GAAK,OAAIA,EAAMiB,UAAV,IAML,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAMH,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAQP,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IACa,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAKvB,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAIL,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAKL,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAIH,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAQP,SAAAjB,GAAK,OAAIA,EAAMiB,UAAV,IAOH,SAAAjB,GAAK,OAAIA,EAAMkB,QAAV,IACM,SAAAlB,GAAK,OAAIA,EAAMiB,UAAV,IAKtBE,EAAeJ,EAAAA,GAAAA,IAAH,qSAIb,SAAAf,GAAK,OAAIA,EAAMkB,QAAV,IACL,SAAAlB,GAAK,OAAIA,EAAMkB,QAAV,IACL,SAAAlB,GAAK,OAAIA,EAAMkB,QAAV,IACL,SAAAlB,GAAK,OAAIA,EAAMkB,QAAV,IAED,SAAAlB,GAAK,OAAKA,EAAMoB,UAAN,cAAyBpB,EAAMoB,UAA/B,KAA8C,MAAnD,I,wCCvFRC,EAAUN,EAAAA,GAAAA,IAAH,sbAeJ,SAAAf,GAAK,OAAKA,EAAMoB,UAAN,cAAyBpB,EAAMoB,UAA/B,KAA8C,MAAnD,IAORE,EAAcP,EAAAA,GAAAA,IAAH,6QAaXQ,GAAcR,EAAAA,EAAAA,IAAOlB,EAAAA,EAAPkB,CAAH,sOAWZ,SAAAf,GAAK,OAAIA,EAAMwB,MAAMC,OAAOC,SAAvB,I,SC7CJC,EAAQ,SAAC,GAAkB,IAAb3B,EAAY,oBACrC,GAA4B4B,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,EAAuB/B,EAAvB+B,SAAUC,EAAahC,EAAbgC,SAEZC,EAAc,SAAAC,GACgBA,EAA1BC,SAA0BD,EAAlBE,eAEdpC,EAAM+B,UAET,GAEDM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,SAAAJ,GACI,WAAfA,EAAMK,MAIVR,GACD,EAQD,OANAS,SAASC,iBAAiB,UAAWH,GACrCE,SAASE,gBAAgBC,MAAMC,UAAY,SAC3CC,YAAW,WACTf,GAAU,EACX,GAAE,KAEI,WACLU,SAASM,oBAAoB,UAAWR,GACxCE,SAASE,gBAAgBC,MAAMC,UAAY,MAC5C,CACF,GAAE,CAACb,IAEJ,IAAMgB,EAAiBlB,EAAS,aAAe,GAC/C,OACE,UAACR,EAAD,CAAS2B,QAASf,EAAab,UAAWpB,EAAMiD,SAAhD,WACE,SAAC3B,EAAD,CAAa4B,UAAWH,EAAxB,SAAyCf,KACzC,SAACT,EAAD,CAAazB,MAAO,GAAIC,OAAQ,GAAIoD,KAAK,SAASH,QAASf,MAGhE,E,UCpCKmB,GAAgBC,EAAAA,EAAAA,OAAK,kBACzB,8BAAyCC,MAAK,SAAAC,GAC5C,OAAO,kBACFA,GADL,IAEEC,QAASD,EAAOH,eAEnB,GANwB,IASdK,EAAmB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQT,EAAsB,EAAtBA,SAAUU,EAAY,EAAZA,MACnD,OAAOC,EAAAA,EAAAA,eACL,SAACjC,EAAD,CAAOI,SAAU2B,EAAQT,SAAUA,EAAnC,UACE,SAAC,EAAAY,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAACX,EAAD,CAAeY,QAASL,QAG5BnB,SAASyB,KAEZ,ECjBYC,EAAY,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOjD,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,WAC3C,GAAkCW,EAAAA,EAAAA,WAAS,GAA3C,eAAOwC,EAAP,KAAkBC,EAAlB,KACA,GAA0CzC,EAAAA,EAAAA,UAAS,IAAnD,eAAO0C,EAAP,KAAsBC,EAAtB,KACA,GAAoC3C,EAAAA,EAAAA,UAAS,MAA7C,eAAO4C,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAc,WAClBP,GAAa,SAAAQ,GAAC,OAAKA,CAAL,GACf,GAEDxC,EAAAA,EAAAA,YAAU,WACR,GAAKqC,EAAL,CAIA,IAAMI,EAAU,mCAAG,8GAEQC,EAAAA,EAAAA,IAAgBL,GAFxB,OAETM,EAFS,OAGfT,EAAiBS,GAHF,gDAKfC,QAAQC,IAAI,KAAMC,SALH,yDAAH,qDAQhBL,GAVC,CAWF,GAAE,CAACJ,KAEJrC,EAAAA,EAAAA,YAAU,WACR,GAAKiC,EAAcc,OAAnB,CACA,IAAMC,EAAkBf,EAAcgB,MAAK,qBAAGC,KACvCC,cAAcC,SAAS,WADa,IAGrCC,EAA0BL,EAC5BA,EAAgBM,IAChB,KACJlB,EAAciB,EAPmB,CAQlC,GAAE,CAACpB,IAEJ,IAAQsB,EACNzB,EADMyB,OAAQC,EACd1B,EADc0B,MAAOC,EACrB3B,EADqB2B,aAAcC,EACnC5B,EADmC4B,YAAaC,EAChD7B,EADgD6B,SAAUC,EAC1D9B,EAD0D8B,cAEtDC,EAAWH,EAAW,UACrBI,EAAAA,GADqB,eACJJ,GACpBK,EACEC,EAAWN,EAAW,UAAMF,EAAN,WAAuB,YAC7C5C,EAAWgD,EAAa,UAAME,EAAAA,GAAN,eAAuBF,GAAkB,OAEvE,OACE,SAAC9E,EAAD,CACEC,UAAW6B,EACX/B,SAAUA,EACVD,WAAYA,EAHd,UAKE,UAACH,EAAD,CAAuBI,SAAUA,EAAUD,WAAYA,EAAvD,WACE,gBACEiC,UAAU,SACVoD,IAAKJ,EACLK,IAAKF,EACLvG,MAAM,MACNC,OAAO,SAET,iBAAKmD,UAAU,aAAf,WACE,eAAIA,UAAU,QAAd,SAAuB2C,KACvB,eAAG3C,UAAU,SAAb,UAAsB,iBACP,6BAAuB,GAAf4C,GAAmBU,QAAQ,GAAG,UAEpDZ,EAAOR,SACN,eAAGlC,UAAU,UAAb,WACE,0BAAM,YAAc,IAAE0C,EAAOa,KAAI,qBAAGlB,IAAH,IAAoBmB,KAAK,SAG7DlC,IACC,mBAAQtB,UAAU,QAAQC,KAAK,SAASH,QAAS4B,EAAjD,SAA8D,mBAIhE,eAAI1B,UAAU,iBAAd,SAA+B,cAC/B,cAAGA,UAAU,gBAAb,SAA8B8C,OAG/B5B,IACC,SAACX,EAAD,CACEC,OAAQkB,EACR3B,SAAUA,EACVU,MAAOa,QAMlB,E,8BCzFYmC,G,QAAkB,WAC7B,OACE,SAACxF,EAAD,WACE,UAACL,EAAD,YACE,gBAAKoC,UAAU,SAAf,UACE,SAAC,IAAD,CAAUpD,MAAO,IAAKC,OAAQ,SAEhC,iBAAKmD,UAAU,aAAf,WACE,eAAIA,UAAU,QAAd,UACE,SAAC,IAAD,CAAUpD,MAAO,IAAKC,OAAQ,QAEhC,eAAGmD,UAAU,SAAb,UAAsB,eACP,KACb,2BACE,SAAC,IAAD,CAAUpD,MAAO,GAAIC,OAAQ,WAGjC,eAAGmD,UAAU,SAAb,WACE,0BAAM,YAAc,KAAC,SAAC,IAAD,CAAUpD,MAAO,IAAKC,OAAQ,SAErD,mBAAQmD,UAAU,QAAlB,UACE,SAAC,IAAD,CAAUpD,MAAO,IAAKC,OAAQ,QAEhC,eAAImD,UAAU,iBAAd,SAA+B,cAC/B,cAAGA,UAAU,gBAAb,UACE,SAAC,IAAD,CAAUpD,MAAO,IAAKC,OAAQ,GAAI6G,MAAO,aAMpD,G,UCmED,EAtFqB,WAAO,IAAD,IACjBlC,GAAYC,EAAAA,EAAAA,MAAZD,QACFmC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3D,GAAwCtF,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOuF,EAAP,KAAqBC,EAArB,KACA,GAAgCxF,EAAAA,EAAAA,WAAS,GAAzC,eAAOyF,EAAP,KAAkBC,EAAlB,KACA,GAA0C1F,EAAAA,EAAAA,UAAS,IAAnD,eAAO2F,EAAP,KAAsBC,EAAtB,KACA,GAAkC5F,EAAAA,EAAAA,UAAS,IAA3C,eAAOF,EAAP,KAAkB+F,EAAlB,KAyCA,OAvCApF,EAAAA,EAAAA,YAAU,WACR,IAAMqF,EAAQ,mCAAG,oGAEbJ,GAAW,GAFE,UAGUK,EAAAA,EAAAA,IAAgBjD,GAH1B,OAGPM,EAHO,OAIboC,EAAgBpC,GAJH,gDAMbC,QAAQC,IAAI,KAAMC,SANL,yBAQbmC,GAAW,GARE,4EAAH,qDAcd,OAFAI,IAEO,WACLE,EAAAA,GAAAA,OACD,CACF,GAAE,CAAClD,KAEJrC,EAAAA,EAAAA,YAAU,WACR,GAAKwF,OAAOC,KAAKX,GAAc/B,OAA/B,CACA,IAAQa,EAAkBkB,EAAlBlB,cACFhD,EAAWgD,EAAa,UACvBE,EAAAA,GADuB,eACNF,GACpB,OAEJ,GAAiB,SAAbhD,EAAJ,CAEA,IAAM8E,EAAS,mCAAG,uGACQC,EAAAA,EAAAA,IAA0B/E,GADlC,OACVvB,EADU,OAEV6F,GAAgBU,EAAAA,EAAAA,IAAiBvG,GACvC8F,EAAiBD,GACjBE,EAAa/F,GAJG,2CAAH,qDAOfqG,GAT+B,CANc,CAgB9C,GAAE,CAACZ,KAGF,gCACGE,IAAa,SAACV,EAAD,KACZU,IACA,SAAC,IAAD,CACEa,GAAInB,EAAoBoB,QACxBjH,SAAUQ,EACVT,WAAYsG,EAHd,SAIC,gBAIFM,OAAOC,KAAKX,GAAc/B,OAAS,IAClC,SAAClB,EAAD,CACEC,MAAOgD,EACPjG,SAAUQ,EACVT,WAAYsG,KAIhB,UAAC,IAAD,YACE,SAAC,KAAD,UAAO,4BACP,UAAC,KAAD,YACE,yBACE,SAAC,IAAD,CAAYW,GAAG,OAAf,SAAsB,YAExB,yBACE,SAAC,IAAD,CAAYA,GAAG,UAAf,SAAyB,kBAG7B,SAAC,EAAArE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C,+ICpGYqE,EAAOrH,EAAAA,GAAAA,GAAH,6UAGY,SAAAf,GAAK,OAAIA,EAAMwB,MAAMC,OAAOC,SAAvB,IAMV,SAAA1B,GAAK,OAAIA,EAAMwB,MAAMC,OAAOC,SAAvB,IAQhB2G,EAAQtH,EAAAA,GAAAA,GAAH,kFACP,SAAAf,GAAK,OAAIA,EAAMwB,MAAMC,OAAOC,SAAvB,IAKH4G,EAAkBvH,EAAAA,GAAAA,IAAH,8BACxBwH,EAAAA,E,0QCrBSpC,EAAa,8BACpBqC,EAAQ,IAAIC,IACZC,EAAW,QAEJd,EAAkB,IAAIe,gBAE7BC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,CACP,eAAgB,mBAChBC,cACE,gOAIC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,4FAAmCC,EAAnC,+BAA0C,EAAGC,EAA7C,+BAAwDV,EAAxD,SAEGW,EAFH,wBAE+BH,EAF/B,YAEwCC,EAFxC,YAEgDC,IAC/CZ,EAAMc,IAAID,GAHX,yCAIMb,EAAMe,IAAIF,IAJhB,uBAOoBT,EAASW,IAAI,eAAgB,CAClDC,OAAQ,CACNN,MAAOA,EACPO,eAAe,EACfN,KAAMA,EACNC,SAAUA,KAZX,cAOGpE,EAPH,OAgBHwD,EAAMkB,IAAIL,EAAUrE,EAAS2E,MAhB1B,kBAkBI3E,EAAS2E,MAlBb,kCAoBH1E,QAAQC,IAAI,KAAM0E,SApBf,kFAwBA,SAAeC,IAAtB,+B,aAAO,O,oBAAA,2GACLV,EADK,+BACE,EACPC,EAFK,+BAEMV,EACXoB,EAHK,+BAGQ,MAHR,SAMGT,EANH,0BAMiCS,EANjC,YAM+CX,EAN/C,YAMuDC,IACtDZ,EAAMc,IAAID,GAPX,yCAQMb,EAAMe,IAAIF,IARhB,uBAWoBT,EAASW,IAAT,yBAA+BO,GAAc,CAClEN,OAAQ,CACNC,eAAe,EACfN,KAAMA,EACNC,SAAUA,KAfX,cAWGpE,EAXH,OAmBHwD,EAAMkB,IAAIL,EAAUrE,EAAS2E,MAnB1B,kBAqBI3E,EAAS2E,MArBb,kCAuBH1E,QAAQC,IAAI,KAAMC,SAvBf,kFA4BA,SAAewC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjD,GAA/B,0FAAwC0E,EAAxC,+BAAmDV,EAAnD,SAEGW,EAFH,wBAE+B3E,EAF/B,YAE0C0E,IAEzCZ,EAAMc,IAAID,GAJX,yCAKMb,EAAMe,IAAIF,IALhB,uBAQoBT,EAASW,IAAT,gBAAsB7E,GAAW,CACtD8E,OAAQ,CACNJ,SAAUA,KAVX,cAQGpE,EARH,OAcHwD,EAAMkB,IAAIL,EAAUrE,EAAS2E,MAd1B,kBAgBI3E,EAAS2E,MAhBb,kCAkBH1E,QAAQC,IAAI,KAAM0E,SAlBf,kFAsBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrF,GAA/B,0FAAwC0E,EAAxC,+BAAmDV,EAAnD,SAEGW,EAFH,wBAE+B3E,EAF/B,YAE0C0E,IACzCZ,EAAMc,IAAID,GAHX,yCAIMb,EAAMe,IAAIF,IAJhB,uBAOoBT,EAASW,IAAT,gBAAsB7E,EAAtB,YAAyC,CAC9D8E,OAAQ,CACNJ,SAAUA,KATX,cAOGpE,EAPH,OAaHwD,EAAMkB,IAAIL,EAAUrE,EAAS2E,MAb1B,kBAeI3E,EAAS2E,MAfb,kCAiBH1E,QAAQC,IAAI,KAAM0E,SAjBf,kFAqBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtF,GAA/B,8FAAwCyE,EAAxC,+BAA+C,EAAGC,EAAlD,+BAA6DV,EAA7D,kBAEoBE,EAASW,IAAT,gBAAsB7E,EAAtB,YAAyC,CAC9D8E,OAAQ,CACNJ,SAAUA,EACVD,KAAMA,KALP,cAEGnE,EAFH,yBASIA,EAAS2E,MATb,gCAWH1E,QAAQC,IAAI,KAAM0E,SAXf,iFAeA,SAAe7E,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,0FAAwC0E,EAAxC,+BAAmDV,EAAnD,SAEGW,EAFH,wBAE+B3E,EAF/B,YAE0C0E,IACzCZ,EAAMc,IAAID,GAHX,yCAIMb,EAAMe,IAAIF,IAJhB,uBAOoBT,EAASW,IAAT,gBAAsB7E,EAAtB,WAAwC,CAC7D8E,OAAQ,CACNJ,SAAUA,KATX,cAOGpE,EAPH,OAaHwD,EAAMkB,IAAIL,EAAUrE,EAAS2E,KAAKM,SAb/B,kBAcIjF,EAAS2E,KAAKM,SAdlB,kCAgBHhF,QAAQC,IAAI,KAAM0E,SAhBf,kF,mJCjIMM,G,QAAmB,SAAAC,GAC9B,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAa,UAAMF,EAAKG,UAAY,GAAK,IAAM,IAAlC,OAAuCH,EAAKG,UAA5C,YACjBH,EAAKI,WAAa,EAAI,GAAK,IAAM,IADhB,OAEhBJ,EAAKI,WAAa,EAFF,YAEOJ,EAAKK,eACzBC,EAAa,UAAMN,EAAKO,WAAa,GAAK,IAAM,IAAnC,OAAwCP,EAAKO,WAA7C,YACjBP,EAAKQ,aAAe,GAAK,IAAM,IADd,OAEhBR,EAAKQ,cAER,MAAM,GAAN,OAAUN,EAAV,YAA2BI,EAC5B,GAEY1C,EAAyB,mCAAG,WAAM6C,GAAN,oHAE/BC,EAAQ,IAAIC,OACZzE,IAAMuE,EACZC,EAAME,YAAc,cAJiB,SAM/B,IAAIC,SAAQ,SAACC,EAASC,GAC1BL,EAAMM,OAASF,EACfJ,EAAMO,QAAU,kBAAMF,EAAO,2JAAb,CACjB,IAToC,uBAWhBG,kBAAkBR,GAXF,OA0BrC,IAfMS,EAX+B,OAY/BC,EAAkB,IAAIC,gBAAgBF,EAAOzL,MAAOyL,EAAOxL,SAC3D2L,EAAUF,EAAgBG,WAAW,OACnCC,UAAUL,EAAQ,EAAG,GAEvBM,EAAYH,EAAQI,aACxB,EACA,EACAN,EAAgB1L,MAChB0L,EAAgBzL,QAEZgM,EAASF,EAAUlC,KAEnBqC,EAAiB,CAAC,EAEfC,EAAI,EAAGA,EAAIF,EAAO3G,OAAQ6G,GAAK,EAChCpL,EAAIkL,EAAOE,GACXC,EAAIH,EAAOE,EAAI,GACfE,EAAIJ,EAAOE,EAAI,GACfG,EAJmC,UAIxBvL,EAJwB,YAInBqL,EAJmB,YAIdC,GAEvBH,EAAeI,GACjBJ,EAAeI,KAEfJ,EAAeI,GAAS,EAO5B,IAAWA,KAHPC,EAAe,EACfC,EAAgB,GAEAN,EACdA,EAAeI,GAASC,IAC1BA,EAAeL,EAAeI,GAC9BE,EAAgBF,EAAMG,MAAM,KAAK7F,KAAK,MA7CL,yBAiD9B4F,GAjD8B,wCAmD/B,IAAIE,MAAM,uOAnDqB,0DAAH,sDAuDzBvE,EAAmB,SAAAwE,GAC9B,MAAkBA,EAASF,MAAM,KAAK9F,IAAIiG,QAA1C,eAKA,OAHwB,IAFxB,KAEkC,IAFlC,KAE4C,IAF5C,MAEmD,IAChB,IAAM,QAAU,aAGpD,C","sources":["components/UI/icons.js","components/MovieCard/MovieCardStyled.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/TrailerContainer/TrailerContainer.js","components/MovieCard/MovieCard.jsx","components/Skeleton/SkeletonDetails.js","pages/MovieDetails.js","pages/MovieDetails.styled.js","services/api/api.js","services/utilities.js"],"sourcesContent":["export const CloseButtonIcon = ({ width, height, ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    {\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n        <path d=\"M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z M390.8,390.8c-74.3,74.3-195.3,74.3-269.6,0c-74.3-74.3-74.3-195.3,0-269.6s195.3-74.3,269.6,0C465.2,195.5,465.2,316.5,390.8,390.8z\" />\n        <polygon points=\"340.2,160 255.8,244.2 171.8,160.4 160,172.2 244,256 160,339.8 171.8,351.6 255.8,267.8 340.2,352 352,340.2 267.6,256 352,171.8\" />\n      </svg>\n    }\n  </svg>\n);\n\nexport const SearchButtonIcon = ({ width, height, ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 24 24\"\n    {...props}\n  >\n    {\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2.5\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle cx=\"11\" cy=\"11\" r=\"8\" />\n        <path d=\"m21 21-4.35-4.35\" />\n      </svg>\n    }\n  </svg>\n);\n","import { Container } from 'components/UI/GlobalStyles/Container.styled';\nimport styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled(Container)`\n  display: flex;\n\n  @media screen and (max-width: 480px) {\n    display: block;\n  }\n\n  .poster {\n    margin-right: 15px;\n    object-fit: cover;\n    border-radius: 10px;\n    width: 300px;\n    height: 450px;\n  }\n\n  .title {\n    font-weight: 900;\n    font-size: 2em;\n    color: rgb(${props => props.$secondary});\n  }\n\n  .scores {\n    margin-top: 10px;\n    font-weight: 500;\n    color: rgb(${props => props.$secondary});\n    vertical-align: middle;\n\n    span {\n      font-weight: 700;\n      font-size: 1.2em;\n      color: rgb(${props => props.$secondary});\n    }\n  }\n\n  .overview-title {\n    margin-top: 2vh;\n    font-size: 1.2em;\n    font-weight: 700;\n    color: rgb(${props => props.$secondary});\n    border-bottom: 2px solid rgb(${props => props.$secondary});\n  }\n\n  .overview-text {\n    margin-top: 1%;\n    color: rgb(${props => props.$secondary});\n  }\n\n  .title-genres {\n    color: rgb(${props => props.$secondary});\n  }\n\n  .genres {\n    margin-top: 1%;\n    color: rgb(${props => props.$secondary});\n\n    span {\n      font-weight: 700;\n      color: rgb(${props => props.$secondary});\n    }\n  }\n\n  .watch {\n    margin-top: 2vh;\n    padding: 5px;\n    font-weight: 700;\n    color: rgb(${props => props.$secondary});\n    background: none;\n    border: 1px solid;\n    border-radius: 5px;\n    cursor: pointer;\n\n    &:hover {\n      color: rgb(${props => props.$primary});\n      background-color: rgb(${props => props.$secondary});\n    }\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  position: relative;\n  background: linear-gradient(\n      to right,\n      rgb(${props => props.$primary} / 1) 25%,\n      rgb(${props => props.$primary} / 0.65) 50%,\n      rgb(${props => props.$primary} / 1) 75%,\n      rgb(${props => props.$primary} / 1) 100%\n    ),\n    no-repeat ${props => (props.$backdrop ? `url(${props.$backdrop})` : 'none')};\n  background-size: cover;\n  background-position: center center;\n`;\n","import styled from 'styled-components';\nimport { CloseButtonIcon } from '../UI/icons';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(\n      to right,\n      rgb(31.5 10.5 10.5 / 1),\n      rgb(31.5 10.5 10.5 / 0.84) 50%,\n      rgb(31.5 10.5 10.5 / 0.84) 100%\n    ),\n    no-repeat ${props => (props.$backdrop ? `url(${props.$backdrop})` : 'none')};\n  background-size: cover;\n  background-position: center;\n\n  z-index: 1200;\n`;\n\nexport const ModalStyled = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  opacity: 0;\n  transform: translateY(-20px);\n  transition: opacity 0.5s ease, transform 0.3s ease;\n\n  &.modal-open {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const CloseButton = styled(CloseButtonIcon)`\n  content: '';\n  position: absolute;\n  top: 1.8rem;\n  right: 1.8rem;\n  background-size: contain;\n  background-repeat: no-repeat;\n  fill: #fff;\n  cursor: pointer;\n\n  &:hover {\n    fill: ${props => props.theme.colors.mainColor};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { CloseButton, ModalStyled, Overlay } from './Modal.styled';\nimport PropTypes from 'prop-types';\n\nexport const Modal = ({ ...props }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { onActive, children } = props;\n\n  const handleClick = event => {\n    const { target, currentTarget } = event;\n    if (target === currentTarget) {\n      props.onActive();\n    }\n  };\n\n  useEffect(() => {\n    const onEscKey = event => {\n      if (event.code !== 'Escape') {\n        return;\n      }\n\n      onActive();\n    };\n\n    document.addEventListener('keydown', onEscKey);\n    document.documentElement.style.overflowY = 'hidden';\n    setTimeout(() => {\n      setIsOpen(true);\n    }, 200);\n\n    return () => {\n      document.removeEventListener('keydown', onEscKey);\n      document.documentElement.style.overflowY = 'auto';\n    };\n  }, [onActive]);\n\n  const modalClassName = isOpen ? 'modal-open' : '';\n  return (\n    <Overlay onClick={handleClick} $backdrop={props.backdrop}>\n      <ModalStyled className={modalClassName}>{children}</ModalStyled>\n      <CloseButton width={48} height={48} type=\"button\" onClick={handleClick} />\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  onActive: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import { YouTubePlayer } from 'components/YouTubePlayer/YouTubePlayer';\nimport { createPortal } from 'react-dom';\nimport { Modal } from 'components/Modal/Modal';\nimport { lazy, Suspense } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nconst YouTubePlayer = lazy(() =>\n  import('../YouTubePlayer/YouTubePlayer').then(module => {\n    return {\n      ...module,\n      default: module.YouTubePlayer,\n    };\n  })\n);\n\nexport const TrailerContainer = ({ isShow, backdrop, video }) => {\n  return createPortal(\n    <Modal onActive={isShow} backdrop={backdrop}>\n      <Suspense fallback={<Loader />}>\n        <YouTubePlayer videoId={video} />\n      </Suspense>\n    </Modal>,\n    document.body\n  );\n};\n\nTrailerContainer.propTypes = {\n  isShow: PropTypes.func.isRequired,\n  backdrop: PropTypes.string,\n  video: PropTypes.string.isRequired,\n};\n","import { IMAGES_URL } from 'services/api/api';\nimport { MovieWrapper, MovieDetailsContainer } from './MovieCardStyled';\nimport defaultPoster from '../../images/placeholders/poster-placeholder.jpg';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TrailerContainer } from 'components/TrailerContainer/TrailerContainer';\nimport { getMovieTrailer } from '../../services/api/api';\n\nexport const MovieCard = ({ movie, $primary, $secondary }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [trailerKey, setTrailerKey] = useState(null);\n  const { movieId } = useParams();\n\n  const onShowModal = () => {\n    setShowModal(s => !s);\n  };\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const getTrailer = async () => {\n      try {\n        const response = await getMovieTrailer(movieId);\n        setMovieTrailers(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getTrailer();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!movieTrailers.length) return;\n    const officialTrailer = movieTrailers.find(({ name }) =>\n      name.toLowerCase().includes('official')\n    );\n    const firstOfficialTrailerKey = officialTrailer\n      ? officialTrailer.key\n      : null;\n    setTrailerKey(firstOfficialTrailerKey);\n  }, [movieTrailers]);\n\n  const { genres, title, vote_average, poster_path, overview, backdrop_path } =\n    movie;\n  const imageSrc = poster_path\n    ? `${IMAGES_URL}w300${poster_path}`\n    : defaultPoster;\n  const imageAlt = poster_path ? `${title} poster` : 'No poster';\n  const backdrop = backdrop_path ? `${IMAGES_URL}w780${backdrop_path}` : 'none';\n\n  return (\n    <MovieWrapper\n      $backdrop={backdrop}\n      $primary={$primary}\n      $secondary={$secondary}\n    >\n      <MovieDetailsContainer $primary={$primary} $secondary={$secondary}>\n        <img\n          className=\"poster\"\n          src={imageSrc}\n          alt={imageAlt}\n          width=\"300\"\n          height=\"450\"\n        />\n        <div className=\"movie-info\">\n          <h2 className=\"title\">{title}</h2>\n          <p className=\"scores\">\n            User scores: <span>{(vote_average * 10).toFixed(0)}%</span>\n          </p>\n          {genres.length && (\n            <p className=\"genres \">\n              <span>Genres:</span> {genres.map(({ name }) => name).join(', ')}\n            </p>\n          )}\n          {trailerKey && (\n            <button className=\"watch\" type=\"button\" onClick={onShowModal}>\n              Watch Trailer\n            </button>\n          )}\n          <h3 className=\"overview-title\">Overview</h3>\n          <p className=\"overview-text\">{overview}</p>\n        </div>\n\n        {showModal && (\n          <TrailerContainer\n            isShow={onShowModal}\n            backdrop={backdrop}\n            video={trailerKey}\n          />\n        )}\n      </MovieDetailsContainer>\n    </MovieWrapper>\n  );\n};\n","import {\n  MovieDetailsContainer,\n  MovieWrapper,\n} from 'components/MovieCard/MovieCardStyled';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nexport const SkeletonDetails = () => {\n  return (\n    <MovieWrapper>\n      <MovieDetailsContainer>\n        <div className=\"poster\">\n          <Skeleton width={300} height={450} />\n        </div>\n        <div className=\"movie-info\">\n          <h2 className=\"title\">\n            <Skeleton width={500} height={45} />\n          </h2>\n          <p className=\"scores\">\n            User scores:{' '}\n            <span>\n              <Skeleton width={30} height={15} />\n            </span>\n          </p>\n          <p className=\"genres\">\n            <span>Genres:</span> <Skeleton width={300} height={15} />\n          </p>\n          <button className=\"watch\">\n            <Skeleton width={112} height={15} />\n          </button>\n          <h3 className=\"overview-title\">Overview</h3>\n          <p className=\"overview-text\">\n            <Skeleton width={500} height={15} count={3} />\n          </p>\n        </div>\n      </MovieDetailsContainer>\n    </MovieWrapper>\n  );\n};\n","import { useRef, Suspense, useState, useEffect } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport {\n  IMAGES_URL,\n  getMovieDetails,\n  abortController,\n} from '../services/api/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { StyledLink, BackLink } from 'components/UI/GlobalStyles/Links';\nimport { List, Title } from './MovieDetails.styled';\nimport { Container } from 'components/UI/GlobalStyles/Container.styled';\nimport { SkeletonDetails } from 'components/Skeleton/SkeletonDetails';\nimport PropTypes from 'prop-types';\nimport {\n  getContrastColor,\n  getDominantColorFromImage,\n} from 'services/utilities';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setLoading] = useState(false);\n  const [contrastColor, setContrastColor] = useState('');\n  const [mainColor, setmainColor] = useState('');\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieDetails(movieId);\n        setMovieDetails(response);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovie();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!Object.keys(movieDetails).length) return;\n    const { backdrop_path } = movieDetails;\n    const backdrop = backdrop_path\n      ? `${IMAGES_URL}w185${backdrop_path}`\n      : 'none';\n\n    if (backdrop === 'none') return;\n\n    const getColors = async () => {\n      const mainColor = await getDominantColorFromImage(backdrop);\n      const contrastColor = getContrastColor(mainColor);\n      setContrastColor(contrastColor);\n      setmainColor(mainColor);\n    };\n\n    getColors();\n  }, [movieDetails]);\n\n  return (\n    <>\n      {isLoading && <SkeletonDetails />}\n      {!isLoading && (\n        <BackLink\n          to={backLinkLocationRef.current}\n          $primary={mainColor}\n          $secondary={contrastColor}\n        >\n          &#10232; Back\n        </BackLink>\n      )}\n      {Object.keys(movieDetails).length > 0 && (\n        <MovieCard\n          movie={movieDetails}\n          $primary={mainColor}\n          $secondary={contrastColor}\n        />\n      )}\n\n      <Container>\n        <Title>Additional information</Title>\n        <List>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </List>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.number,\n};\n","import { baseNoInfoStyles } from 'components/UI/GlobalStyles/BaseStyles';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  padding: 0;\n  border-bottom: 2px solid ${props => props.theme.colors.mainColor};\n\n  li {\n    width: 70px;\n    text-align: center;\n    padding: 5px;\n    background-color: ${props => props.theme.colors.mainColor};\n    border-right: #fff 1px solid;\n    border-left: #fff 1px solid;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.colors.mainColor};\n  font-size: 1.5em;\n  margin-block: 1vh;\n`;\n\nexport const NoSearchResults = styled.div`\n  ${baseNoInfoStyles}\n`;\n","import axios from 'axios';\n\n// \"backdrop_sizes\": \"w300\", \"w780\", \"w1280\", \"original\"\n// \"poster_sizes\": \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"\n// \"profile_sizes\": \"w45\", \"w185\", \"h632\", \"original\"\n\nexport const IMAGES_URL = 'https://image.tmdb.org/t/p/';\nconst cache = new Map();\nconst LANGUAGE = 'en-US';\n\nexport const abortController = new AbortController();\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOTMxNDhmYjNlMjk2YmI3YmM0MGQyZjkzMDg2NWUyYSIsInN1YiI6IjYxMmJkOWRlNDJmMTlmMDA0MjllYzRlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qUcOqubdlFiw4Vo4XJp8VttB73h6Ocj7p2Hqc1K-jGE',\n  },\n});\n\nexport async function searchMovies(query, page = 1, language = LANGUAGE) {\n  try {\n    const cacheKey = `search-movies-${query}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get('search/movie', {\n      params: {\n        query: query,\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getTrendingMovies(\n  page = 1,\n  language = LANGUAGE,\n  timeWindow = 'day'\n) {\n  try {\n    const cacheKey = `trending-movies-${timeWindow}-${page}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`trending/movie/${timeWindow}`, {\n      params: {\n        include_adult: true,\n        page: page,\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n//Append To Response - movie detail если будет время посмотреть, прикольная штука\nexport async function getMovieDetails(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-details-${movieId}-${language}`;\n\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}`, {\n      params: {\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getMovieCredits(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-credits-${movieId}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}/credits`, {\n      params: {\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getMovieReviews(movieId, page = 1, language = LANGUAGE) {\n  try {\n    const response = await instance.get(`movie/${movieId}/reviews`, {\n      params: {\n        language: language,\n        page: page,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n\nexport async function getMovieTrailer(movieId, language = LANGUAGE) {\n  try {\n    const cacheKey = `movie-trailer-${movieId}-${language}`;\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const response = await instance.get(`movie/${movieId}/videos`, {\n      params: {\n        language: language,\n      },\n    });\n\n    cache.set(cacheKey, response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.massage);\n  }\n}\n","import { theme } from 'components/UI/Themes/theme';\n\nexport const getFormattedTime = timeString => {\n  const date = new Date(timeString);\n  const formattedDate = `${date.getDate() < 10 ? '0' : ''}${date.getDate()}.${\n    date.getMonth() + 1 < 10 ? '0' : ''\n  }${date.getMonth() + 1}.${date.getFullYear()}`;\n  const formattedTime = `${date.getHours() < 10 ? '0' : ''}${date.getHours()}:${\n    date.getMinutes() < 10 ? '0' : ''\n  }${date.getMinutes()}`;\n\n  return `${formattedDate} ${formattedTime}`;\n};\n\nexport const getDominantColorFromImage = async imageUrl => {\n  try {\n    const image = new Image();\n    image.src = imageUrl;\n    image.crossOrigin = 'crossOrigin';\n\n    await new Promise((resolve, reject) => {\n      image.onload = resolve;\n      image.onerror = () => reject('Ошибка загрузки изображения');\n    });\n\n    const bitmap = await createImageBitmap(image);\n    const offscreenCanvas = new OffscreenCanvas(bitmap.width, bitmap.height);\n    const context = offscreenCanvas.getContext('2d');\n    context.drawImage(bitmap, 0, 0);\n\n    const imageData = context.getImageData(\n      0,\n      0,\n      offscreenCanvas.width,\n      offscreenCanvas.height\n    );\n    const pixels = imageData.data;\n\n    const colorFrequency = {};\n\n    for (let i = 0; i < pixels.length; i += 4) {\n      const r = pixels[i];\n      const g = pixels[i + 1];\n      const b = pixels[i + 2];\n      const color = `${r},${g},${b}`;\n\n      if (colorFrequency[color]) {\n        colorFrequency[color]++;\n      } else {\n        colorFrequency[color] = 1;\n      }\n    }\n\n    let maxFrequency = 0;\n    let dominantColor = '';\n\n    for (const color in colorFrequency) {\n      if (colorFrequency[color] > maxFrequency) {\n        maxFrequency = colorFrequency[color];\n        dominantColor = color.split(',').join(' ');\n      }\n    }\n\n    return dominantColor;\n  } catch (error) {\n    throw new Error('Ошибка при получении доминирующего цвета: ' + error);\n  }\n};\n\nexport const getContrastColor = rgbColor => {\n  const [r, g, b] = rgbColor.split(' ').map(Number);\n\n  const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n  const contrastColor = brightness > 128 ? '0 0 0' : '255 255 255';\n\n  return contrastColor;\n};\n\nexport const getDynamicColors = async backdrop => {\n  try {\n    theme.mainDynamicColor = await getDominantColorFromImage(backdrop);\n    theme.mainContrastColor = getContrastColor(theme.mainDynamicColor);\n    console.log('theme.mainDynamicColor', theme.mainDynamicColor);\n    console.log('theme.mainContrastColor', theme.mainContrastColor);\n  } catch (error) {}\n};\n"],"names":["CloseButtonIcon","width","height","props","xmlns","viewBox","d","points","SearchButtonIcon","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","MovieDetailsContainer","styled","Container","$secondary","$primary","MovieWrapper","$backdrop","Overlay","ModalStyled","CloseButton","theme","colors","mainColor","Modal","useState","isOpen","setIsOpen","onActive","children","handleClick","event","target","currentTarget","useEffect","onEscKey","code","document","addEventListener","documentElement","style","overflowY","setTimeout","removeEventListener","modalClassName","onClick","backdrop","className","type","YouTubePlayer","lazy","then","module","default","TrailerContainer","isShow","video","createPortal","Suspense","fallback","Loader","videoId","body","MovieCard","movie","showModal","setShowModal","movieTrailers","setMovieTrailers","trailerKey","setTrailerKey","movieId","useParams","onShowModal","s","getTrailer","getMovieTrailer","response","console","log","message","length","officialTrailer","find","name","toLowerCase","includes","firstOfficialTrailerKey","key","genres","title","vote_average","poster_path","overview","backdrop_path","imageSrc","IMAGES_URL","defaultPoster","imageAlt","src","alt","toFixed","map","join","SkeletonDetails","count","location","useLocation","backLinkLocationRef","useRef","state","from","movieDetails","setMovieDetails","isLoading","setLoading","contrastColor","setContrastColor","setmainColor","getMovie","getMovieDetails","abortController","Object","keys","getColors","getDominantColorFromImage","getContrastColor","to","current","List","Title","NoSearchResults","baseNoInfoStyles","cache","Map","LANGUAGE","AbortController","instance","axios","baseURL","headers","Authorization","searchMovies","query","page","language","cacheKey","has","get","params","include_adult","set","data","massage","getTrendingMovies","timeWindow","getMovieCredits","getMovieReviews","results","getFormattedTime","timeString","date","Date","formattedDate","getDate","getMonth","getFullYear","formattedTime","getHours","getMinutes","imageUrl","image","Image","crossOrigin","Promise","resolve","reject","onload","onerror","createImageBitmap","bitmap","offscreenCanvas","OffscreenCanvas","context","getContext","drawImage","imageData","getImageData","pixels","colorFrequency","i","g","b","color","maxFrequency","dominantColor","split","Error","rgbColor","Number"],"sourceRoot":""}